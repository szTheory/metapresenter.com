#topshelf
  = partial 'spiral'
  = partial 'layouts/nav'

  .container
    .row
      .col
        .container-fluid.text-center
          .row.justify-content-center
            #animated-text-container.col.mb-2
              %p
                %span #{dato.home.animated_header_1}
                %span #{dato.home.animated_header_2}
              %p
                %span #{dato.home.animated_header_2}
                %span #{dato.home.animated_header_3}
              %p
                %span #{dato.home.animated_header_3}
                %span #{dato.home.animated_header_4}
          #hero.row.justify-content-center.mt-4
            .col.col-lg-11.col-xl-10
              = image_tag 'images/hero-title.png', class: 'img-fluid mb-3 hero-title hero-title-sm'
              = image_tag 'images/hero-title-lg.png', class: 'img-fluid mb-3 hero-title hero-title-lg'
              .container-fluid
                .row.align-middle.no-gutters.justify-content-center
                  .col.col-lg-2.hero-linework-col
                    = image_tag 'images/hero-linework.png', class: 'hero-linework hero-linework-left'
                  .col.col-lg-8
                    %h3.mb-3 #{dato.home.subheader}
                  .col.col-lg-2.hero-linework-col
                    = image_tag 'images/hero-linework.png', class: 'hero-linework hero-linework-right'
              %span.mobile #{markdown(dato.home.description_1)}
              %span.non-mobile #{markdown(dato.home.description_non_mobile)}
              %p.text-center #{dato.home.install_header}

          .row.justify-content-center
            .col.col-lg-4
              #install-instructions.text-left
                = code('ruby') do
                  gem 'meta_presenter'
                = code('sh') do
                  $ bundle install
  = image_tag 'images/fold-slash-white.png', class: 'img-fluid fold-slash-white'

#first-light-container.container-light.container-fluid
  #hero-line-base.text-center
    %p.upcase.learnmore Learn More
    = image_tag 'images/hero-line-base.png', class: 'small'
    = image_tag 'images/line-base-hero-lg-bottom.png', class: 'large'

  .row
    .col
      .container-fluid.text-center
        .row.justify-content-center
          .col.col-md-10.col-lg-10
            %h2.shadow-base.elegantshadow.upcase.text-center MetaPresenter
            .container-fluid
              .row.align-middle.justify-content-center
                .col.col-sm-3.linework-col
                  = image_tag 'images/linework.png', class: 'linework linework-left'
                .col.col-sm-6
                  %h3.mt-4 #{dato.home.how_does_it_work_header}
                .col.col-sm-3.linework-col
                  = image_tag 'images/linework.png', class: 'linework linework-right'
            .container-fluid
              .row.justify-content-center
                .col.col-lg-10.col-xl-8
                  %p.big
                    You get a presenter class for each of your controller's actions that you can use from your views with
                    / %code presenter.method_name
                    %strong presenter.method_name
                  %p.big You can even delegate methods to objects or the controller itself to reduce boilerplate code.

#black-breakup-top.black-breakup{style: background_image('images/steps-intro-mobile.jpg', 'images/steps-intro.png')}
  = image_tag 'images/diagonal-slice-rectangle.png', class: 'img-fluid diagonal-slice'
  .container-fluid
    .row.justify-content-center
      .col.col-lg-10.col-xl-8
        .container-fluid.text-center
          .row.justify-content-center.justify-content-lg-start
            = image_tag 'images/red-three-dots.png', id: 'red-three-dots'
          .row.justify-content-center.justify-content-lg-start
            %p.big-dark Decompose your helper logic into tight, easily-testable classes
          .row.justify-content-center.justify-content-lg-start
            %p.massive In 4 simple steps
    = image_tag 'images/overlay-shape-large.png', class: 'black-breakup-top-image large'
  = image_tag 'images/overlay-shape.png', class: 'black-breakup-top-image img-fluid small'

#container-light-main.container-light.container-steps.container-fluid
  .row
    .col
      .container-fluid
        - dato.home.steps.each.with_index do |step, i|
          = partial 'selling_point', locals: {number: i+1, message: step.message, description: step.description, code_block: step.code, syntax_language: step.syntax_language}

#black-breakup-bottom.black-breakup{style: background_image('images/bottom-bg-black-abstract.jpg', 'images/bottom-bg-black-abstract-large.jpg')}
  = image_tag 'images/overlay-shape-bottom.png', id: 'black-breakup-image', class: 'img-fluid'
  = image_tag 'images/side-lines-mobile.png', class: 'side-lines-mobile'
  = image_tag 'images/side-lines.png', class: 'side-lines'
  .container-fluid
    .row.justify-content-center.justify-content-lg-left
      .col.col-sm-10.col-lg-6.offset-lg-6.col-xl-5.offset-xl-5
        .container-fluid.text-center
          .row.justify-content-center.justify-content-lg-left.mt-lg-5
            = image_tag 'images/red-three-dots.png', id: 'red-three-dots'
          .row.justify-content-center.justify-content-lg-left
            %p.big-dark Are you ready to
          .row.justify-content-center.justify-content-lg-left
            %p.massive Give it a try?
          .row.justify-content-center.justify-content-lg-left
            = image_tag 'images/line-bottom.png', class: 'step-number-line img-fluid mb-2 mt-lg-4 mt-sm-2'
          .row.justify-content-center.justify-content-lg-left
            = image_tag 'images/line-bottom.png', class: 'step-number-line img-fluid mb-3 mb-lg-4'
          .row.justify-content-center.justify-content-lg-left.mt-lg-2
            .col-11
              %p.mt-1 If you're ready to start beautifying your code in one simple step, visit the GitHub page to grab MetaPresenter or to learn more about it.
          .row.justify-content-center.justify-content-lg-left.mt-lg-2
            .col-11.col-lg-8
              = link_to dato.application.github_url, class: 'cta' do
                %h3 Get started now

%footer
  .container-fluid
    .row.justify-content-center.justify-content-lg-start
      .col-10.col-lg-9
        .container-fluid
          .row.justify-content-lg-left
            .col-12.col-lg-4.justify-content-lg-left.d-flex.justify-content-sm-center.force-left-lg
              = link_to dato.application.github_url do
                = image_tag 'images/footer-logo.png', class: 'mb-3 img-fluid', id: 'footer-logo'
            .col-12.col-lg-8.navlist.mb-3.justify-content-lg-left.d-flex.justify-content-center
              - dato.nav.nav_items.each.with_index do |nav_item, i|
                = link_to nav_item.path do
                  #{nav_item.label}
                - unless i == dato.nav.nav_items.size-1
                  %span= "//"
      .col-10.col-lg-3
        .container-fluid
          .row
            .col.d-flex.justify-content-center.justify-content-lg-end
              = image_tag 'images/logos.png', class: 'img-fluid mt-4 mt-lg-0'
    .row.justify-content-center.justify-content-lg-start
      .col-10.col-lg-12
        .container-fluid
          .row
            .col.d-flex.justify-content-center.justify-content-lg-start
              %p.mt-4 MetaPresenter as well as the contents of this website developed and Â© #{Time.new.year} by szTheory. Current Version #{dato.application.current_version_number}